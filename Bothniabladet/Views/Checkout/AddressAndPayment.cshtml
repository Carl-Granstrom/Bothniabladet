@model IEnumerable<Bothniabladet.Models.Checkout.ShoppingCartModel>

@{
    ViewData["Title"] = "Checkout";
}


<div class="container-fluid">

    @*Header*@
    <div class="row">
        @*Better way than the previous version to handle go back (Even though it's in JavaScript)*@
        <a href='javascript:history.go(-1)'>Back to List</a>
        <hr />
    </div>

    @*Main content*@
    <div class="row">

        @*The Image that are going to be sold*@
        <div class="col">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Thumbnail
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Images.BasePrice)
                        </th>
                        <th>
                            Operations
                        </th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <a asp-controller="Images" asp-action="Details" asp-route-id="@item.Images.ImageId">
                                    <img src="@item.ImagesStringData" />
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                <a asp-action="">Remove</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @*The information form to fill out*@
        <div class="col">
            <form asp-action="Complete"
                  asp-controller="Checkout"
                  method="post"
                  enctype="multipart/form-data">


                <div class="form-group">
                    <label asp-for="fName" class="control-label">Förnamn</label>
                    <input type="text" asp-for="fName" class="form-control" placeholder="Förnamn" />
                    <span asp-validation-for="fName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="lName" class="control-label">Förnamn</label>
                    <input type="text" asp-for="lName" class="form-control" placeholder="Efternamn" />
                    <span asp-validation-for="lName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Address" class="control-label">Address</label>
                    <input type="text" asp-for="Address" class="form-control" placeholder="Address" />
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>



                <div class="form-group">
                    <label for="keywords" class="control-label">Taggar:</label>
                    <div id="keyword_parent"></div>
                    <span class="badge badge-pill badge-primary"></span>
                    <input type="text" id="keyword_field" value="" />
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<!-- JS includes -->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        bsCustomFileInput.init()
        let keywords = [];
        const keywordField = document.getElementById('keyword_field')
        const keywordParent = document.getElementById('keyword_parent')
        const keywordToForm = document.getElementById('Keywords')
        keywordField.addEventListener('input', (e) => {
            console.log(keywords)
            let inputString = keywordField.value
            if (e.data === " ") {
                inputString = inputString.trim()
                createPillBadge(keywordParent, inputString)
                keywords.push(inputString)
                keywordToForm.value = keywords.join()
                inputString = null
                keywordField.value = null
            }

        })
    });
    function createPillBadge(keywordParent, word){
        let span = document.createElement("span")
        span.className = "badge badge-pill badge-primary";
        let text = document.createTextNode(word)
        span.appendChild(text)
        keywordParent.appendChild(span)
    };
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
